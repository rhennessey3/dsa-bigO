O(n^2) - Polynomial time

function quadraticSum(n) {
    let sum =[];
    for (let j = 0; j < n.length; j++) {
        for (let k = 0; k < n[j].length-1; k++) {
            sum.push(n[j][k] + n[j][k+1]);
        }
    }
    return sum;
}
let arr = [[1,2],[3,4],[5,6]];
console.log(quadraticSum(arr));



O(n) - Linear time

function findItem(items, itemToMatch) {
    for (let i = 0; i < items.length; i++) {
        if (items[i] === itemToMatch) {
            return true;
        }
     }
     return false;
}

